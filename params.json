{
  "name": "Nginx-php-mysql-setup",
  "tagline": "Setting Up Nginx, PHP, Composer and Mysql on a Linux system",
  "body": "# Setup Linux Server with Nginx, PHP and Mysql\r\n\r\n## Seting up Components\r\nFirst, we need to update our local package index to make sure we have a fresh list of the available packages. Then we can install the necessary components:\r\n\r\n    sudo apt-get update\r\n    sudo apt-get install nginx php5-fpm php5-cli php5-mcrypt git\r\n\r\nThis will install Nginx as our web server along with the necessary PHP tools. We also install git because the composer tool, the dependency manager for PHP, will use it to pull down packages.\r\n\r\nIf you want to configure PHP then you can edit _php.ini_ file and change configuration settings for that execute following statements\r\n\r\n    sudo vim /etc/php5/fpm/php.ini\r\n    \r\n## Configuring Nginx Server root directory and default document\r\nThe next item that we should address is the web server. This will involve following two steps.\r\n\r\nFirst create the folder where your website will be hosted(root directory)\r\n\r\n    sudo mkdir -p /var/www/vhosts/example.com\r\n    \r\nNow we need to set _/var/www/vhosts/example.com_ as root directory of **Nginx** web server for that we need to edit default Nginx Configuration file located at _/etc/nginx/sites-available/default_.\r\n    \r\n    sudo nano /etc/nginx/sites-available/default\r\n    \r\nDefault Configuration file\r\n    server {\r\n        listen 80 default_server;\r\n        listen [::]:80 default_server ipv6only=on;\r\n\r\n        root /usr/share/nginx/html;\r\n        index index.html index.htm;\r\n\r\n        server_name localhost;\r\n\r\n        location / {\r\n                try_files $uri $uri/ =404;\r\n        }\r\n    }\r\n\r\nNow we need to \r\n* Change the root directory from _/usr/share/nginx/html_ to root directory of our project Eg. _/var/www/vhosts/example.com_.\r\n* Add index.php to default document list.\r\n* Add static IP or Domain Name instead of Localhost in server Name\r\n\r\nFor thatc just change the Nginx default configuration file to following file.\r\n\r\n    server {\r\n        listen 80 default_server;\r\n        listen [::]:80 default_server ipv6only=on;\r\n\r\n        root /var/www/vhosts/example.com;\r\n        index index.php index.html index.htm;\r\n\r\n        server_name <Static IP Address or Domain Name>;\r\n\r\n        location / {\r\n                try_files $uri $uri/ =404;\r\n        }\r\n    }\r\n    \r\n## Setup Nginx to execute PHP scripts\r\n\r\nFor this again we need to open **Nginx** Default Configuration file and add following block into it right before closing of server block\r\n\r\n    location ~ \\.php$ {\r\n        try_files $uri /index.php =404;\r\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\r\n        fastcgi_pass unix:/var/run/php5-fpm.sock;\r\n        fastcgi_index index.php;\r\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\r\n        include fastcgi_params;\r\n    }\r\n    \r\nAfter saving finally configuration file should look like this\r\n\r\n    server {\r\n        listen 80 default_server;\r\n        listen [::]:80 default_server ipv6only=on;\r\n    \r\n        root /var/www/vhosts/example.com;\r\n        index index.php index.html index.htm;\r\n    \r\n        server_name <Static IP Address or Domain Name>;\r\n    \r\n        location / {\r\n            try_files $uri $uri/ /index.php?$query_string;\r\n        }\r\n    \r\n        location ~ \\.php$ {\r\n            try_files $uri /index.php =404;\r\n            fastcgi_split_path_info ^(.+\\.php)(/.+)$;\r\n            fastcgi_pass unix:/var/run/php5-fpm.sock;\r\n            fastcgi_index index.php;\r\n            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\r\n            include fastcgi_params;\r\n        }\r\n    }\r\n    \r\nAfter saving the configuration file we just need to restart Nginx\r\n\r\n    sudo service nginx restart\r\n    \r\n## Setting up Composer\r\nComposer is the most popular dependency manager for php projects and to setup composer we just need to execute following commands.\r\n\r\n    cd ~\r\n    curl -sS https://getcomposer.org/installer | php\r\n    sudo mv composer.phar /usr/local/bin/composer\r\n    \r\n## Installing up Mysql\r\nMysql is the most common and popular database server used with PHP and to setup mysql databse you just need to execute\r\n\r\n    sudo apt-get update\r\n    sudo apt-get install mysql-server\r\n    \r\nThis will prompt you for mysql root(admin) password too.\r\n    \r\n## Updating and verifying Mysql Server\r\n\r\n    sudo mysql_secure_installation\r\n    \r\nAbove command will prompt you and can be used to remove default created users and test databases that came right out of the box along with mysql installation.\r\n\r\nto test mysql installation try executing \r\n    \r\n    service mysql status\r\n    \r\nIf above command gives an error then just start mysql service with command\r\n\r\n    sudo service mysql start\r\n    \r\n## Securing Mysql \r\n\r\nDatabase is the crucial part of a website which needs to be secure for that you may consider following guidelines(optional)\r\n\r\n**Renaming root username**\r\n\r\nRoot is the database administrator account which has all the privileges so it make sense to chage root credentials after installation(especially username).\r\n\r\nfor that execute following command\r\n    \r\n    mysql -u root -p \r\n    <Enter mysql Password>\r\n    mysql> rename user 'root'@'localhost' to '<new_username>'@'localhost';\r\n    \r\n**Creating New user with limited Database Access and limited privileges**\r\n\r\n    mysql -u root -p\r\n    <Enter mysql password>\r\n    mysql> GRANT SELECT,UPDATE,DELETE ON <database_name>.* TO '<new_user>'@'localhost';\r\n    \r\nAfter completing all the steps mentioned above your webserver will be ready with Nginx, PHP, Composer and Mysql\r\n\r\nBut In some cases you might get Mysql Connection Exception saying mysql driver not found for that just execute following command\r\n\r\n    sudo apt-get install php5-mysql\r\n    \r\nAnd you are done...\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}